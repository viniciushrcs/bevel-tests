##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# Build corda os docker images triggered by :
#  - push on develop branch for latest tags 
#  - create tag vx.y.z for release tags
#  - Can be triggered manually

name: Build Corda Opensource docker images

on:
  workflow_dispatch:
    inputs:
      corda_version:
        description: 'Enter Corda OS Version to build'
        required: true
        default: '4.7'
        type: choice
        options:
        - '4.4'
        - '4.7'
      gmaps_key:
        description: 'Enter Google Maps API key'
        required: false
        default: 'Google API key for Network Map'
  create:
    tags:
      - v*
  push:
    branches:
      - develop
    paths:
      - 'platforms/r3-corda/images/**'   
      - '.github/workflows/corda_images_build.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_PATH: ghcr.io/${{ github.repository_owner }}

jobs:
  # on push to develop branch, create docker tags latest
  cordaOS-latest:
    if: ${{ startsWith(github.ref, 'refs/heads/develop') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Login to the container registry
      uses: docker/login-action@v1
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: corda builds
      run: |
        WDIR=`pwd`
        
        java -version
        update-alternatives --list java

        echo "---- building networkmap ----"
        cd ${WDIR}/platforms/r3-corda/images/networkmap

        # Replace the Google Maps API key in two files
        sed -i -e 's*REPLACE_ME_GMAPS_KEY*${{ github.event.inputs.gmaps_key }}*g' website/app/scripts/geoCode.js
        sed -i -e 's*REPLACE_ME_GMAPS_KEY*${{ github.event.inputs.gmaps_key }}*g' website/app/components/Map/MyMap.js
        
        mvn clean install -DskipTests   

        echo "---- building doorman ----"
        cd ${WDIR}/platforms/r3-corda/images/doorman
        mvn clean install -DskipTests  
    
    - name: Build and push cordaOS doorman latest  
      id: corda_doorman_latest
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/doorman
        push: true
        tags: ${{ env.IMAGE_PATH }}/bevel-doorman-linuxkit:latest            
    
    - name: Build and push cordaOS networkmap latest
      id: corda_networkmap_latest
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/networkmap
        push: true
        tags: ${{ env.IMAGE_PATH }}/bevel-networkmap-linuxkit:latest
    
    - name: Build and push cordaOS node latest
      if: github.event.inputs.corda_version == ''
      id: corda_node_latest
      uses: docker/build-push-action@v2
      with:
        file: platforms/r3-corda/images/Dockerfile-corda-tls
        push: true
        tags: ${{ env.IMAGE_PATH }}/bevel-corda:latest

    - name: Build and push cordaOS node with provided version
      if: github.event.inputs.corda_version != ''
      id: corda_node_version
      uses: docker/build-push-action@v2
      with:
        file: platforms/r3-corda/images/Dockerfile-corda-tls
        push: true
        build-args: |
          BUILDTIME_CORDA_VERSION=${{ github.event.inputs.corda_version }}
        tags: ${{ env.IMAGE_PATH }}/bevel-corda:latest,${{ env.IMAGE_PATH }}/bevel-corda:${{ github.event.inputs.corda_version }}-linuxkit
  
  cordaOS-release: 
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'
    
    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to the container registry
      uses: docker/login-action@v1
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: corda builds
      run: |
        WDIR=`pwd`
        
        java -version
        update-alternatives --list java

        echo "---- building networkmap ----"
        cd ${WDIR}/platforms/r3-corda/images/networkmap
        mvn clean install -DskipTests   

        echo "---- building doorman ----"
        cd ${WDIR}/platforms/r3-corda/images/doorman
        mvn clean install -DskipTests  
    
    - name: Build and push cordaOS doorman release tag ${{ steps.vars.outputs.tag }}  
      id: corda_doorman_release
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/doorman
        push: true
        tags: ${{ env.IMAGE_PATH }}/bevel-doorman-linuxkit:${{ steps.vars.outputs.tag }},${{ env.IMAGE_PATH }}/bevel-doorman-linuxkit:stable
    
    - name: Build and push cordaOS networkmap release tag ${{ steps.vars.outputs.tag }}  
      id: corda_networkmap_release
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/networkmap
        push: true
        tags: ${{ env.IMAGE_PATH }}/bevel-networkmap-linuxkit:${{ steps.vars.outputs.tag }},${{ env.IMAGE_PATH }}/bevel-networkmap-linuxkit:stable
    
    - name: Build and push cordaOS node release and stable tag ${{ steps.vars.outputs.tag }}  
      id: corda_node_release
      uses: docker/build-push-action@v2
      with:
        file: platforms/r3-corda/images/Dockerfile-corda-tls
        push: true
        tags: ${{ env.IMAGE_PATH }}/bevel-corda:${{ steps.vars.outputs.tag }},${{ env.IMAGE_PATH }}/bevel-corda:stable
  
  publish:
    # if: ${{ startsWith(github.ref, 'refs/heads/develop') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Publish to Github Packages
      run: |
        WDIR=`pwd`
        
        cd ${WDIR}/examples/supplychain-app/corda/cordApps_springBoot
        ./gradlew clean
        ./gradlew build
        ./gradlew publish --stacktrace
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_USER_NAME: ${{ github.actor }}