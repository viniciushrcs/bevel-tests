##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# This role generates crypto material for users.
#############################################################################################

############################################################################################
# Copy generate-user-crypto script from scrips directory
- name: Copy generate-user-crypto.sh to destination directory
  copy:
    src: "{{ playbook_dir }}/../scripts/{{ files }}"
    dest: "./build/{{ files }}"
    mode: 0755
    remote_src: yes
  with_items:
    - generate-user-crypto.sh
  loop_control:
    loop_var: files

############################################################################################
# This task changes the permission for msp
- name: Changing the permission of msp files
  file:  
    path: ./build/{{ files }} 
    mode: '0775'
  with_items:
    - generate-user-crypto.sh
  loop_control:
    loop_var: files

############################################################################################
# This task copies generate-user-crypto.sh file using the CA Tools Pod 
- name: Copy generate_crypto.sh file using the CA Tools 
  shell: |
    CA_TOOL_CLI=$(KUBECONFIG={{ kubernetes.config_file }} kubectl get po -n {{ component_name }} | grep "ca-tools" | awk '{print $1}')
    export CA_TOOL_CLI
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp ./build/generate-user-crypto.sh {{ component_name }}/${CA_TOOL_CLI}:/root/ca-tools/{{org_name|lower}}/generate-user-crypto.sh

############################################################################################
# This task executes generate-user-crypto.sh file using the CA Tools to generate user certificate 
- name: Execute generate-user-crypto.sh file using the CA Tools 
  shell: |
    CA_TOOL_CLI=$(KUBECONFIG={{ kubernetes.config_file }} kubectl get po -n {{ component_name }} | grep "ca-tools" | awk '{print $1}')
    export CA_TOOL_CLI
    KUBECONFIG={{ kubernetes.config_file }} kubectl exec -n {{ component_name }} ${CA_TOOL_CLI} -- /root/ca-tools/{{org_name|lower}}/./generate-user-crypto.sh peer {{component_name}} {{org_name|lower}} {{users|b64encode}} {{org_name}} "{{subject}}" "{{ca_url}}"
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp {{ component_name }}/${CA_TOOL_CLI}:crypto-config ./build/crypto-config

# Copy user certificates to vault
- name: Copy user certificates for orgs
  include_tasks: save_to_vault.yaml
  loop: "{{ users }}"
  loop_control:
    loop_var: user
